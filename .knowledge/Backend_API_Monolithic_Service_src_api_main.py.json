{"is_source_file": true, "format": "Python", "description": "This is a Python source file implementing a monolithic backend API using FastAPI. It provides health checks, metrics, authentication via JWT, RBAC, CRUD operations for items, and API documentation.", "external_files": ["fastapi", "sqlalchemy", "jose", "pydantic", "uvicorn"], "external_methods": ["fastapi.FastAPI", "fastapi.Request", "fastapi.status", "fastapi.Depends", "fastapi.HTTPException", "fastapi.Security", "fastapi.responses.JSONResponse", "fastapi.security.OAuth2PasswordBearer", "fastapi.security.OAuth2PasswordRequestForm", "fastapi.security.SecurityScopes", "fastapi.middleware.cors.CORSMiddleware", "fastapi.openapi.utils.get_openapi", "sqlalchemy.ext.asyncio.create_async_engine", "sqlalchemy.orm.sessionmaker", "jose.jwt", "pydantic.BaseModel", "uvicorn.run"], "published": ["app", "health_check", "metrics", "login_for_access_token", "read_users_me", "create_item", "list_items", "get_item", "update_item", "delete_item"], "classes": [{"name": "Role", "description": "RBAC role class with predefined roles"}, {"name": "User", "description": "Pydantic model representing a user object"}, {"name": "Token", "description": "Pydantic model for JWT token response"}, {"name": "ItemIn", "description": "Input model for creating/updating items"}, {"name": "ItemOut", "description": "Output model for item data including ID"}], "methods": [{"name": "get_db()", "description": "Asynchronous dependency to get a database session", "scope": "", "scopeKind": ""}, {"name": "User get_current_user( security_scopes: SecurityScopes, token: str = Depends(oauth2_scheme) )", "description": "Retrieve current user from JWT token, with scope validation", "scope": "", "scopeKind": ""}, {"name": "User get_current_active_user( current_user: User = Security(get_current_user, scopes=[]) )", "description": "Ensure the user is active (not disabled)", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Health check endpoint to verify API status", "scope": "", "scopeKind": ""}, {"name": "metrics()", "description": "Stub endpoint for metrics collection", "scope": "", "scopeKind": ""}, {"name": "login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends())", "description": "Authenticate user and issue JWT token", "scope": "", "scopeKind": ""}, {"name": "read_users_me(current_user: User = Depends(get_current_active_user))", "description": "Retrieve current authenticated user info", "scope": "", "scopeKind": ""}, {"name": "create_item( item: ItemIn, current_user: User = Security(get_current_user, scopes=[Role.USER]), )", "description": "Create a new item, RBAC: user or admin", "scope": "", "scopeKind": ""}, {"name": "list_items( current_user: User = Security(get_current_user, scopes=[Role.USER]), )", "description": "Retrieve all items, RBAC: user or admin", "scope": "", "scopeKind": ""}, {"name": "get_item( item_id: int, current_user: User = Security(get_current_user, scopes=[Role.USER]), )", "description": "Retrieve specific item by ID, RBAC: user or admin", "scope": "", "scopeKind": ""}, {"name": "update_item( item_id: int, item: ItemIn, current_user: User = Security(get_current_user, scopes=[Role.USER]), )", "description": "Update existing item, RBAC: user or admin", "scope": "", "scopeKind": ""}, {"name": "delete_item( item_id: int, current_user: User = Security(get_current_user, scopes=[Role.ADMIN]), )", "description": "Delete an item, RBAC: admin only", "scope": "", "scopeKind": ""}, {"name": "custom_openapi()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str fake_hash_password(password: str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "general_exception_handler(request: Request, exc: Exception)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "shutdown_event()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "startup_event()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "validation_exception_handler(request: Request, exc: ValidationError)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["os.environ.get", "logging.basicConfig", "logging.getLogger", "create_async_engine", "sessionmaker", "jwt.decode", "jwt.encode", "app.add_middleware", "get_openapi", "app.openapi", "app.get", "app.post", "app.put", "app.delete", "uvicorn.run"], "search-terms": ["FastAPI", "JWT", "RBAC", "CRUD", "OAuth2PasswordBearer", "asyncio", "items API", "monolithic backend", "Uvicorn", "SQLAlchemy async"], "state": 2, "file_id": 1, "knowledge_revision": 20, "git_revision": "2e87e1490e9e729cd7a10579df6ebe4567f3bafc", "revision_history": [{"18": "2e87e1490e9e729cd7a10579df6ebe4567f3bafc"}, {"20": "2e87e1490e9e729cd7a10579df6ebe4567f3bafc"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"ACCESS_TOKEN_EXPIRE_MINUTES\", 60))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ADMIN", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^    ADMIN = \"admin\"$/", "language": "Python", "kind": "variable", "scope": "Role", "scopeKind": "class"}, {"_type": "tag", "name": "AsyncSessionLocal", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^AsyncSessionLocal = sessionmaker(engine, class_=AsyncSession, expire_on_commit=False)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DATABASE_URL", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^DATABASE_URL = os.environ.get(\"POSTGRES_URL\") or os.environ.get(\"DATABASE_URL\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "FAKE_USERS_DB", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^FAKE_USERS_DB = {$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ITEMS_DB", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^ITEMS_DB: Dict[int, dict] = {}$/", "language": "Python", "typeref": "typename:Dict[int, dict]", "kind": "variable"}, {"_type": "tag", "name": "ITEM_SEQ", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^ITEM_SEQ = 1$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ItemIn", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^class ItemIn(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ItemOut", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^class ItemOut(ItemIn):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JWT_ALGORITHM", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^JWT_ALGORITHM = os.environ.get(\"JWT_ALGORITHM\", \"HS256\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_SECRET", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^JWT_SECRET = os.environ.get(\"JWT_SECRET\", \"changemeplease\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Role", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^class Role(str):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Token", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "USER", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^    USER = \"user\"$/", "language": "Python", "kind": "variable", "scope": "Role", "scopeKind": "class"}, {"_type": "tag", "name": "User", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^class User(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "app", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_item", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def create_item($/", "language": "Python", "kind": "function", "signature": "( item: ItemIn, current_user: User = Security(get_current_user, scopes=[Role.USER]), )"}, {"_type": "tag", "name": "custom_openapi", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^def custom_openapi():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "delete_item", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def delete_item($/", "language": "Python", "kind": "function", "signature": "( item_id: int, current_user: User = Security(get_current_user, scopes=[Role.ADMIN]), )"}, {"_type": "tag", "name": "description", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^    description: Optional[str] = Field(None, description=\"Item description\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "ItemIn", "scopeKind": "class"}, {"_type": "tag", "name": "disabled", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^    disabled: bool = False$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "engine", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^engine = create_async_engine(DATABASE_URL, echo=True, future=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "fake_hash_password", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^def fake_hash_password(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "general_exception_handler", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def general_exception_handler(request: Request, exc: Exception):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: Exception)"}, {"_type": "tag", "name": "get_current_active_user", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def get_current_active_user($/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "( current_user: User = Security(get_current_user, scopes=[]) )"}, {"_type": "tag", "name": "get_current_user", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def get_current_user($/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "( security_scopes: SecurityScopes, token: str = Depends(oauth2_scheme) )"}, {"_type": "tag", "name": "get_db", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_item", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def get_item($/", "language": "Python", "kind": "function", "signature": "( item_id: int, current_user: User = Security(get_current_user, scopes=[Role.USER]), )"}, {"_type": "tag", "name": "health_check", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_items", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def list_items($/", "language": "Python", "kind": "function", "signature": "( current_user: User = Security(get_current_user, scopes=[Role.USER]), )"}, {"_type": "tag", "name": "logger", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^logger = logging.getLogger(\"backend-monolith\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "login_for_access_token", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends())"}, {"_type": "tag", "name": "metrics", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def metrics():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "name", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^    name: str = Field(..., description=\"Name of the item\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ItemIn", "scopeKind": "class"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "read_users_me", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def read_users_me(current_user: User = Depends(get_current_active_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_active_user))"}, {"_type": "tag", "name": "shutdown_event", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def shutdown_event():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "startup_event", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def startup_event():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "update_item", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def update_item($/", "language": "Python", "kind": "function", "signature": "( item_id: int, item: ItemIn, current_user: User = Security(get_current_user, scopes=[Role.USER]), )"}, {"_type": "tag", "name": "validation_exception_handler", "path": "/tmp/kavia/workspace/code-generation/sample-backend-apis-2be5c7b7/Backend_API_Monolithic_Service/src/api/main.py", "pattern": "/^async def validation_exception_handler(request: Request, exc: ValidationError):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: ValidationError)"}], "hash": "e59aea1a4f4a0e321c8ad629e2c992f2", "format-version": 4, "code-base-name": "Backend API Monolithic Service", "filename": "Backend_API_Monolithic_Service/src/api/main.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"ACCESS_TOKEN_EXPIRE_MINUTES\", 60))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ADMIN = \"admin\"", "scope": "Role", "scopeKind": "class", "description": "unavailable"}, {"name": "AsyncSessionLocal = sessionmaker(engine, class_=AsyncSession, expire_on_commit=False)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DATABASE_URL = os.environ.get(\"POSTGRES_URL\") or os.environ.get(\"DATABASE_URL\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "FAKE_USERS_DB = {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[int, dict] ITEMS_DB", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ITEM_SEQ = 1", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_ALGORITHM = os.environ.get(\"JWT_ALGORITHM\", \"HS256\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_SECRET = os.environ.get(\"JWT_SECRET\", \"changemeplease\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "USER = \"user\"", "scope": "Role", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] description", "scope": "ItemIn", "scopeKind": "class", "description": "unavailable"}, {"name": "bool disabled", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "engine = create_async_engine(DATABASE_URL, echo=True, future=True)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(\"backend-monolith\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str name", "scope": "ItemIn", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(", "scope": "", "scopeKind": "", "description": "unavailable"}]}